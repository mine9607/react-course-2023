{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increaseBy(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"INCREASE\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"INCREASE_BY\") {\n//     return {\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"DECREASE\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"TOGGLE\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increaseBy","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["/home/bminer/udemy/courses/react-complete-courseV2-2023/19-redux/src/store/redux.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increaseBy(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"INCREASE\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"INCREASE_BY\") {\n//     return {\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"DECREASE\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"TOGGLE\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,UAAUA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACxBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAE;IAAEb,OAAO,EAAEE,YAAY,CAACW;EAAQ;AAC3C,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAClD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}