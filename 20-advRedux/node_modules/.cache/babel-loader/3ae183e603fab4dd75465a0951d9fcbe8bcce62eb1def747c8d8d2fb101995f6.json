{"ast":null,"code":"import { cartActions } from \"./cartSlice\";\nimport { uiActions } from \"./uiSlice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    const url = \"https://react-redux-8f26c-default-rtdb.firebaseio.com/cart.json\";\n    const config = {\n      method: \"PUT\",\n      body: JSON.stringify({\n        items: cart.items,\n        total: cart.totalQuantity\n      })\n    };\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data.\"\n    }));\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully.\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed.\"\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const url = \"https://react-redux-8f26c-default-rtdb.firebaseio.com/cart.json\";\n    // const config = {\n    //   method: \"GET\",\n    // };\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed.\");\n      }\n      const data = await response.json();\n      dispatch(cartActions.replaceCart(data));\n    } catch (error) {\n      // dispatch(\n      //   uiActions.showNotification({\n      //     status: \"error\",\n      //     title: \"Error!\",\n      //     message: \"Fetching cart data failed.\",\n      //   })\n      // );\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","sendCartData","cart","dispatch","url","config","method","body","JSON","stringify","items","total","totalQuantity","showNotification","status","title","message","response","fetch","ok","Error","error","fetchCartData","data","json","replaceCart"],"sources":["/home/bminer/udemy/courses/react-complete-courseV2-2023/20-advRedux/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cartSlice\";\nimport { uiActions } from \"./uiSlice\";\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    const url = \"https://react-redux-8f26c-default-rtdb.firebaseio.com/cart.json\";\n    const config = {\n      method: \"PUT\",\n      body: JSON.stringify({ items: cart.items, total: cart.totalQuantity }),\n    };\n\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data.\",\n      })\n    );\n    try {\n      const response = await fetch(url, config);\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully.\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed.\",\n        })\n      );\n    }\n  };\n};\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const url = \"https://react-redux-8f26c-default-rtdb.firebaseio.com/cart.json\";\n    // const config = {\n    //   method: \"GET\",\n    // };\n    try {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed.\");\n      }\n      const data = await response.json();\n      dispatch(cartActions.replaceCart(data));\n    } catch (error) {\n      // dispatch(\n      //   uiActions.showNotification({\n      //     status: \"error\",\n      //     title: \"Error!\",\n      //     message: \"Fetching cart data failed.\",\n      //   })\n      // );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,WAAW;AAErC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,GAAG,GAAG,iEAAiE;IAC7E,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAER,IAAI,CAACQ,KAAK;QAAEC,KAAK,EAAET,IAAI,CAACU;MAAc,CAAC;IACvE,CAAC;IAEDT,QAAQ,CACNH,SAAS,CAACa,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAG,EAAEC,MAAM,CAAC;MAEzC,IAAI,CAACY,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEAjB,QAAQ,CACNH,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdlB,QAAQ,CACNH,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMM,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOnB,QAAQ,IAAK;IACzB,MAAMC,GAAG,GAAG,iEAAiE;IAC7E;IACA;IACA;IACA,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAG,CAAC;MAEjC,IAAI,CAACa,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMG,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCrB,QAAQ,CAACJ,WAAW,CAAC0B,WAAW,CAACF,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACd;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;EAEJ,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}